# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VnUTZe4SfXrNJrQuOeAiSv4Imm5zsYfs
"""

# Packages for image classification
import torch
from transformers import ViTForImageClassification, ViTImageProcessor
from PIL import Image

# Packages for labels
import json
from pathlib import Path
import requests

# Load the pre-trained model
model_name = "google/vit-base-patch16-224"
model = ViTForImageClassification.from_pretrained(model_name)

# Load the image processor
processor = ViTImageProcessor.from_pretrained(model_name)

# Load the image
image_path = "img.png"
image = Image.open(image_path).convert("RGB")

# Preprocess the image
inputs = processor(images=image, return_tensors="pt")

# Perform inference
with torch.no_grad():
    outputs = model(**inputs)

predicted_class_idx = outputs.logits.argmax(-1).item()

# Load the class labels (ImageNet)
labels_url = "https://raw.githubusercontent.com/anishathalye/imagenet-simple-labels/master/imagenet-simple-labels.json"
labels_path = Path("imagenet-simple-labels.json")

if not labels_path.exists():
    response = requests.get(labels_url)
    labels_path.write_text(response.text)

# Load the class labels
with open(labels_path, "r") as f:
    labels = json.load(f)

# Get the predicted class name
predicted_class_name = labels[predicted_class_idx]
print(f"Predicted class name: {predicted_class_name}")